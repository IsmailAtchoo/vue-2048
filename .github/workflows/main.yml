name: CI-CD

on:
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
    tags:
      - 'v*'
  pull_request:
    branches: [main]
    paths-ignore:
      - 'docs/**'
  # ex√©cution manuelle
  workflow_dispatch:
    inputs:
      run_checks:
        description: 'Ex√©cuter lint / type-check / tests ?'
        required: true
        type: boolean
        default: true
  # ex√©cution hebdomadaire (lundi 08:00 Europe/Paris = 06:00 UTC)
  schedule:
    - cron: '0 6 * * 1'

env:
  NODE_VERSION: 20
  PNPM_VERSION: latest

permissions:
  contents: read
  id-token: write

jobs:
  # ------------------------------------------------------------------
  # BUILD principal (push sur main)
  # ------------------------------------------------------------------
  build-main:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare pnpm@${{ env.PNPM_VERSION }} --activate

      - run: pnpm install
      - run: pnpm build

      - name: Upload dist artifact (1 semaine)
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  # ------------------------------------------------------------------
  # BUILD sur Pull-Request
  # ------------------------------------------------------------------
  build-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare pnpm@${{ env.PNPM_VERSION }} --activate

      - run: pnpm install
      - run: pnpm build
      - run: pnpm type-check
      - run: pnpm lint --fix
      - run: pnpm test

      - name: Upload dist artifact (24¬†h)
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 1

  # ------------------------------------------------------------------
  # Ex√©cution manuelle (workflow_dispatch / schedule)
  # ------------------------------------------------------------------
  manual-build:
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare pnpm@${{ env.PNPM_VERSION }} --activate

      - run: pnpm install
      - run: pnpm build

      - name: Conditional static checks
        if: github.event_name == 'schedule' || inputs.run_checks == 'true'
        run: |
          pnpm type-check
          pnpm lint --fix
          pnpm test

      - name: Upload dist artifact (24¬†h)
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 1

  # ------------------------------------------------------------------
  # D√©ploiement QA depuis ex√©cution manuelle
  # ------------------------------------------------------------------
  deploy-qa:
    if: github.event_name == 'workflow_dispatch'
    needs: manual-build
    runs-on: ubuntu-latest
    environment: qa
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Install Static Web Apps CLI
        run: npm install -g @azure/static-web-apps-cli

      - name: Deploy to QA (preview env)
        env:
          SWA_QA_TOKEN: ${{ secrets.SWA_QA_TOKEN }}
        run: |
          echo "üöÄ D√©ploiement QA‚Ä¶"
          swa deploy ./dist --env=preview --deployment-token $SWA_QA_TOKEN

  # ------------------------------------------------------------------
  # D√©ploiement PROD (apr√®s QA)
  # ------------------------------------------------------------------
  deploy-prod:
    if: github.event_name == 'workflow_dispatch'
    needs: deploy-qa
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Install Static Web Apps CLI
        run: npm install -g @azure/static-web-apps-cli

      - name: Deploy to PROD
        env:
          SWA_PROD_TOKEN: ${{ secrets.SWA_PROD_TOKEN }}
        run: |
          echo "üöÄ D√©ploiement PROD‚Ä¶"
          swa deploy ./dist --env=production --deployment-token $SWA_PROD_TOKEN

  # ------------------------------------------------------------------
  # Release & d√©ploiement global lors du push d'un tag (v*)
  # ------------------------------------------------------------------
  release-and-deploy:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build-main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: dist/**

      - name: Install Static Web Apps CLI
        run: npm install -g @azure/static-web-apps-cli

      - name: Deploy tag to QA
        env:
          SWA_QA_TOKEN: ${{ secrets.SWA_QA_TOKEN }}
        run: swa deploy ./dist --env=preview --deployment-token $SWA_QA_TOKEN

      - name: Deploy tag to PROD
        env:
          SWA_PROD_TOKEN: ${{ secrets.SWA_PROD_TOKEN }}
        run: swa deploy ./dist --env=production --deployment-token $SWA_PROD_TOKEN

  # ------------------------------------------------------------------
  # (Optionnel) Preview environement √©ph√©m√®re si label "preview" sur la PR
  # ------------------------------------------------------------------
  preview-env:
    if: github.event_name == 'pull_request' && contains(join(github.event.pull_request.labels.*.name, ','), 'preview')
    runs-on: ubuntu-latest
    environment: preview-${{ github.head_ref }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Static Web Apps CLI
        run: npm install -g @azure/static-web-apps-cli
      - name: Cr√©er env √©ph√©m√®re & d√©ployer
        env:
          SWA_QA_TOKEN: ${{ secrets.SWA_QA_TOKEN }}
        run: |
          envName=preview-${{ github.head_ref }}
          echo "Cr√©ation d'un environnement preview pour la branche ${{ github.head_ref }}‚Ä¶"
          swa deploy ./ --env=preview --deployment-token $SWA_QA_TOKEN --app-name $envName
      - name: Poster le lien dans la PR
        uses: actions/github-script@v7
        with:
          script: |
            const envUrl = `https://preview-${{ github.head_ref }}.azurestaticapps.net`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `‚ú® Environnement de pr√©-prod pr√™t : ${envUrl}`
            });

  cleanup-preview-env:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && contains(join(github.event.pull_request.labels.*.name, ','), 'preview')
    runs-on: ubuntu-latest
    steps:
      - name: D√©truire l'environnement preview
        env:
          SWA_QA_TOKEN: ${{ secrets.SWA_QA_TOKEN }}
        run: |
          envName=preview-${{ github.head_ref }}
          echo "Suppression de l'environnement preview pour la branche ${{ github.head_ref }}‚Ä¶"
          swa env delete $envName --deployment-token $SWA_QA_TOKEN
